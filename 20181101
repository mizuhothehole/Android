package com.example.ishiiaya.myapplication;

import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.WindowManager;
import android.view.animation.Animation;
import android.widget.ProgressBar;

import java.util.concurrent.ExecutionException;

public class MainActivity extends AppCompatActivity {

    static Context cx;
    static ProgressBar barsta;

    private static class MyTask extends AsyncTask<String, Void, String> {

        private Handler h;

        MyTask(Handler handler) {
            h = handler;
        }

        @Override
        protected String doInBackground(String... strings) {

            // open process bar
            h.post(new Runnable() {
                @Override
                public void run() {
                    WindowManager wm = (WindowManager) cx.getSystemService(WINDOW_SERVICE);
                    ProgressBar bar = new ProgressBar(cx);
                    bar.setIndeterminate(true);
                    barsta = bar;
                    wm.addView(bar, new WindowManager.LayoutParams());
                }
            });

            String s = strings[0];

            try {
                Thread.sleep(10000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            // remove process bar
            h.post(new Runnable() {
                @Override
                public void run() {
                    WindowManager wm = (WindowManager) cx.getSystemService(WINDOW_SERVICE);
                    wm.removeView(barsta);
                }
            });

            Message msg = Message.obtain();
            // 実際にはマジックナンバーではなく値を決めておく
            msg.what = 1;

            // 結果がString型のresultにあると仮定
            msg.obj = s;
            h.sendMessage(msg);
            return null;
        }

    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        cx = this;

        findViewById(R.id.button).setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        try {
                            getNetInfo(new Handler() {

                                @Override
                                public void handleMessage(Message msg) {
                                    switch (msg.what) {
                                        case 1:
                                            // msg.objはObject型なのでキャストする必要がある
                                            Log.d("QIN Handler", (String) msg.obj);
                                            startActivity(new Intent(cx, MainActivity.class));// here to do next UI operations.
                                            // here to start new activity;
                                            break;
                                        default:
                                            break;
                                    }
                                }

                            });
                        } catch (ExecutionException e) {
                            e.printStackTrace();
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                }
        );

    }

    static void getNetInfo(Handler handler) throws ExecutionException, InterruptedException {
        final String[] str = new String[1];
        AsyncTask<String, Void, String> task = new MyTask(handler);

        task.execute("ni hao");
    }
}
