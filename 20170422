安卓系统下的应用程序层到Linux内核层研究

这次的git上写的东西因为时间有限，我只能先把深度写到自己对于Linux的可以控制的参数的程度，也就是开发者最深入到Linux系统的可变参数。

一。安卓系统的应用程序层的基本功能如下：

Home：也就是安卓的主页的Activity以及后台的一些功能，打开安卓系统看到的所有东西，只要你不刻意的点进去一个程序，这个就是Home。
Cantacts:联系人。这个用来统一管理安卓系统下的手机联系人。
Phone：手机的通话功能。也就是我们想进行呼出的时候的功能。
Browser：这个是手机的浏览器，Nexus的话默认的一般是Chrome吧。
.
.
.
除此之外还有很多很多APP。通常安卓上面的APP可以分为三种：
一种是装在priv-app下面的优先级最高的App。这种app可以获取任何它想要的系统资源。
第二种是安装在system/app下面的系统App。优先级略低于上面一种。
另外一种就是外部软件提供商提供的App。这个一般是安装在SD卡上面。



二。安卓的应用程序框架层:

这一层就是提供给开发者们进行开发用的安卓框架了。基本的开发模块也就是如下的一些部分：
ActivityManager：这个是用来统一的管理系统的Activity和Service的。
WindowsManager：这个是用来连接手机屏幕和后台的View的一个模块。可以通过WindowsManager进行相关的Widget的创建然后进行最优先级的View的屏幕渲染。
ContentProviders：不用我多说，这个就是用过Uri进行数据提供的模块。
ViewSystem：这个是通过统一管理View进行前台View的渲染以及View之间的交互，互相之间的关系等等。
NotificationManager：这个是统一管理安卓手机系统的通知和推送的。
PackageManager：这个是统一管理所有安卓系统下面的已经安装的所有应用程序APP的，安装的信息都可以在这里面看到。
TelephonyManager：这个是管理SIM卡，运营商之类的和手机通话相关的东西的。
ResourceManager：这个是用来统一管理安卓的系统资源的。最典型的就是layout.xml这种系统资源，以及R文件等等。
LocationManager：用户的位置信息。可以开发一些Map应用。
XMPP Service：这个是用来以XMPP(一种XML的变种)格式进行数据传输的。

三。再往下一层就是虚拟机了：

所以虚拟机Runtime下面的Core Libraries也可以供我们开发者用。做一些Java虚拟机的操作。

四。系统运行库

这一层的东西，我们开发者也可以使用，为什么呢？因为这里面的东西，是和Java虚拟机Dalvik交互的。因为都是用C和C++写的，我们看不到很具体的细节，然而我
们依旧可以进行相关的这类库的使用，因为实际上安卓框架已经把这些C和C++的库给我们封装好了，使得我们开发者直接可以用Java语言进行调用，也就是中间要经
过一次JVM进行外部的资源调用而已，所以说实际上我们开发者使用这一类的库的时候，走的路子是不一样的。

五。Linux可调参数

在安卓系统目录的 sys/kernel下面。这里面的可调参数在如下的文件当中。uevent_helper, kexec_loader, mm, slab。其他的在(proc/sys/kernel)接口中
动态调试功能就是你可以决定在程序运行过程中是否要 pr_debug(), dev_dbg(), print_hex_dump_debug(), print_hex_dump_bytes() 这些函数正常运行起来。

echo –n 'file suspend.c line 340 +p' > /sys/kernel/debug/dynamic_debug/control     
让 kernel/power/suspend.c 源码第340行的 pr_debug() 函数打印日志：

echo -n 'file test.c +p' >            /sys/kernel/debug/dynamic_debug/control      
让 test.c file 中的pr_debug()，dev_dbg()等函数打印日志：

echo -n 'func test_control -p' > /sys/kernel/debug/dynamic_debug/control            
让 test_control 函数不打印日志：

echo -n 'module test +p' >    /sys/kernel/debug/dynamic_debug/control                 
让 module test中的pr_debug()，dev_dbg()等函数打印日志：

