ZXing QR code: close camera after pending for a long time

AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.ishiiaya.postdelay">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".SubActivity">
        </activity>
        <activity android:name=".ScanActivity"
            android:screenOrientation="fullSensor"
            xmlns:tools="http://schemas.android.com/tools"
            tools:replace="screenOrientation"/>

    </application>

</manifest>

MainActivity

package com.example.ishiiaya.postdelay;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Toast;

import com.google.zxing.integration.android.IntentIntegrator;
import com.google.zxing.integration.android.IntentResult;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setTitle("Main");
        setContentView(R.layout.activity_main);
        findViewById(R.id.button1).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivityForResult(new Intent(MainActivity.this, ScanActivity.class), 1);
            }
        });
    }


//    @Override
//    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
//        super.onActivityResult(requestCode, resultCode, data);
//        Log.d("QIN", "result code is:" + resultCode);
//    }
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data){
        super.onActivityResult(requestCode, resultCode, data);
        Log.d("QIN", "onActivityResult in here with super:" + resultCode);  // the log can be seen in logcat...
        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
        if(result != null) {
            if(result.getContents() == null) {
                Log.d(getClass().getName(), "Cancelled");
                Toast.makeText(this, "扫描结果为空", Toast.LENGTH_LONG).show();
            } else {
                Log.d(getClass().getName(), "Scanned: " + result.getContents());
                Toast.makeText(this, result.getContents(), Toast.LENGTH_LONG).show();
            }
        }
    }
}

ScanActivity

package com.example.ishiiaya.postdelay;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.annotation.NonNull;
import android.util.Log;
import android.view.KeyEvent;

import com.journeyapps.barcodescanner.BarcodeResult;
import com.journeyapps.barcodescanner.CaptureManager;
import com.journeyapps.barcodescanner.DecoratedBarcodeView;

/**
 * Created by ishiiaya on 2019/02/12.
 */

public class ScanActivity extends Activity {
    private CustomManager capture;
    private DecoratedBarcodeView bv_barcode;
    Handler handler;
    Runnable runnable;
    private boolean isPending = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_scan_qrcode);

        bv_barcode = (DecoratedBarcodeView) findViewById(R.id.bv_barcode);

        capture = new CustomManager(this, bv_barcode);
        capture.initializeFromIntent(getIntent(), savedInstanceState);
        capture.decode();

        handler = new Handler(getMainLooper());
        runnable = new Runnable() {
            @Override
            public void run() {
                Log.d("QIN", "runnable in");
                if(isPending){
                    Log.d("QIN", "runnable works go in");
                    isPending = false;
                    setResult(Activity.RESULT_CANCELED);
                    capture.closeAndFinish();
                }
            }
        };
        handler.postDelayed(runnable, 1000 * 10);
        isPending = true;
    }


    @Override
    protected void onResume() {
        super.onResume();
        capture.onResume();
    }

    @Override
    protected void onPause() {
        super.onPause();
        capture.onPause();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        Log.d("QIN", "onDestroy in");
        capture.onDestroy();
        if(isPending){
            Log.d("QIN", "removing...");
            handler.removeCallbacks(runnable);
            isPending = false;
        }
    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        capture.onSaveInstanceState(outState);
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String permissions[], @NonNull int[] grantResults) {
        capture.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        return bv_barcode.onKeyDown(keyCode, event) || super.onKeyDown(keyCode, event);
    }
    static final class CustomManager extends CaptureManager{

        public CustomManager(Activity activity, DecoratedBarcodeView barcodeView) {
            super(activity, barcodeView);
        }

        @Override
        protected void returnResult(BarcodeResult rawResult) {
            super.returnResult(rawResult);
        }

        @Override
        protected void closeAndFinish() {
            super.closeAndFinish();
        }
    }
}

SubActivity

package com.example.ishiiaya.postdelay;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;

public class SubActivity extends AppCompatActivity {

    Handler handler;
    Runnable runnable;
    private boolean isPending = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setTitle("Sub");
        setContentView(R.layout.activity_main);
        handler = new Handler(getMainLooper());
        runnable = new Runnable() {
            @Override
            public void run() {
                Log.d("QIN", "runnable in");
                if(isPending){
                    Log.d("QIN", "runnable works go in");
                    isPending = false;
                    startActivity(new Intent(SubActivity.this, MainActivity.class).setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |
                            Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
                }
            }
        };
        handler.postDelayed(runnable, 1000 * 10);
        isPending = true;

        findViewById(R.id.button1).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(SubActivity.this, MainActivity.class).setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |
                Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
            }
        });
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        Log.d("QIN", "onDestroy in");
        if(isPending){
            handler.removeCallbacks(runnable);
            isPending = false;
        }
    }
}
